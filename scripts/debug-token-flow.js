#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js');

const SUPABASE_URL = 'https://fezdmxvqurczeqmqvgzm.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZlemRteHZxdXJjemVxbXF2Z3ptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMxODIyODAsImV4cCI6MjA2ODc1ODI4MH0.uVHCEmNjpbkjFtOkwb9ColGd1zORc5HdWvBygKPEkm0';

async function debugTokenFlow() {
  console.log('🔍 Debugging Device Token Flow...\n');
  
  const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
  const USER_ID = '4e4da279-7195-4663-a4ce-4164057ece65';
  
  // Check 1: Are there any tokens in the database at all?
  console.log('1. Checking for ANY device tokens in database...');
  try {
    const { data: allTokens, count } = await supabase
      .from('device_tokens')
      .select('*', { count: 'exact' });
      
    console.log(`   Found ${count || 0} total device tokens in database`);
    if (allTokens && allTokens.length > 0) {
      allTokens.forEach((token, index) => {
        console.log(`   Token ${index + 1}: User ${token.user_id}, Type: ${token.device_type}, Active: ${token.is_active}`);
      });
    } else {
      console.log('   ❌ NO device tokens found in database at all');
    }
  } catch (error) {
    console.log('   ❌ Error querying tokens:', error.message);
    if (error.message.includes('row-level security')) {
      console.log('   🔐 RLS is blocking - this is expected with anon key');
    }
  }
  
  // Check 2: Test database connection and table structure
  console.log('\n2. Testing database connection and table structure...');
  try {
    const { data, error } = await supabase
      .from('device_tokens')
      .select('count(*)', { count: 'exact' })
      .limit(0);
      
    if (error) {
      console.log('   ❌ Table query error:', error.message);
    } else {
      console.log('   ✅ Database connection and table structure OK');
    }
  } catch (error) {
    console.log('   ❌ Connection error:', error.message);
  }
  
  // Check 3: Test RLS policies
  console.log('\n3. Testing Row Level Security policies...');
  
  const testToken = {
    user_id: USER_ID,
    device_token: `test_debug_${Date.now()}`,
    device_type: 'ios',
    app_version: '1.0.0',
    device_info: { test: true },
    is_active: true
  };
  
  try {
    const { data, error } = await supabase
      .from('device_tokens')
      .insert([testToken])
      .select();
      
    if (error) {
      console.log('   ❌ RLS blocking insert (expected):', error.message);
      console.log('   🔧 This means the app MUST use authenticated session to save tokens');
    } else {
      console.log('   ✅ Insert successful (unexpected - RLS might be disabled)');
      // Clean up
      if (data && data[0]) {
        await supabase.from('device_tokens').delete().eq('id', data[0].id);
      }
    }
  } catch (error) {
    console.log('   ❌ Insert test error:', error.message);
  }
  
  console.log('\n🎯 Analysis:');
  console.log('Based on the error "send notification but still not save token":');
  console.log('');
  console.log('✅ Push notifications are working (you can send them)');
  console.log('✅ Device tokens are being generated by iOS');  
  console.log('✅ App can receive notifications');
  console.log('❌ Device tokens are NOT being saved to Supabase database');
  console.log('');
  console.log('🔧 Root Cause Analysis:');
  console.log('1. 📱 iOS is generating device tokens successfully');
  console.log('2. 🔐 App has valid Supabase session (user is logged in)');
  console.log('3. 💾 saveDeviceToken function is not being called OR');
  console.log('4. 🚫 saveDeviceToken function is failing silently OR'); 
  console.log('5. 🔑 Supabase client in push service lacks authentication');
  console.log('');
  console.log('✅ Solutions to try:');
  console.log('1. Check console logs for "💾 Attempting to save device token" message');
  console.log('2. Check if onRegister callback in push service is being called');
  console.log('3. Verify the push service is using authenticated supabase client');
  console.log('4. Check if there are any silent errors in saveDeviceToken function');
  console.log('');
  console.log('📋 Debug Commands:');
  console.log('# Check if tokens are being generated locally:');
  console.log('# Look for these logs in the app console:');
  console.log('# "📱 Device token received: ..."');
  console.log('# "💾 Attempting to save device token: ..."');
  console.log('# "🔐 Current session: ..."');
  console.log('# "✅ Device token saved to Supabase"');
}

debugTokenFlow().catch(console.error);